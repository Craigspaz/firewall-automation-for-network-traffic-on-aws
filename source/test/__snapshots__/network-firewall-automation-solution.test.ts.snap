// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NetworkFirewallAutomationStack Snapshot test 1`] = `
Object {
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": Object {
    "CreateDefaultRouteFirewallRT": Object {
      "Fn::And": Array [
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "TransitGatewayRTIdForDefaultRoute",
                },
                "",
              ],
            },
          ],
        },
        Object {
          "Condition": "CreateTransitGatewayAttachment",
        },
      ],
    },
    "CreateTransitGatewayAttachment": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "ExistingTransitGateway",
            },
            "",
          ],
        },
      ],
    },
    "CreateTransitGatewayRTAssociation": Object {
      "Fn::And": Array [
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "TransitGatewayRouteTableIdForAssociation",
                },
                "",
              ],
            },
          ],
        },
        Object {
          "Condition": "CreateTransitGatewayAttachment",
        },
      ],
    },
    "LoggingInCloudWatch": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "logDestinationType",
        },
        "CloudWatchLogs",
      ],
    },
    "LoggingInS3": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "logDestinationType",
        },
        "S3",
      ],
    },
    "NotLoggingConfigureManually": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "logDestinationType",
            },
            "ConfigureManually",
          ],
        },
      ],
    },
  },
  "Mappings": Object {
    "Send": Object {
      "AnonymousUsage": Object {
        "Data": "Yes",
      },
      "ParameterKey": Object {
        "UniqueId": "/Solutions/network-firewall-automation/UUID",
      },
    },
    "SolutionMapping": Object {
      "CodeCommitRepo": Object {
        "Name": "network-firewall-config-repo-",
      },
      "Log": Object {
        "Level": "info",
      },
      "Metrics": Object {
        "URL": "https://metrics.awssolutionsbuilder.com/generic",
      },
      "Route": Object {
        "QuadZero": "0.0.0.0/0",
      },
      "Solution": Object {
        "Identifier": "SO0108",
      },
      "TransitGatewayAttachment": Object {
        "ApplianceMode": "enable",
      },
      "Version": Object {
        "Latest": "latest",
      },
    },
  },
  "Metadata": Object {
    "AWS::CloudFormation::Interface": Object {
      "ParameterGroups": Array [
        Object {
          "Label": Object {
            "default": "VPC Configuration",
          },
          "Parameters": Array [
            "cidrBlock",
          ],
        },
        Object {
          "Label": Object {
            "default": "Transit Gateway Configuration",
          },
          "Parameters": Array [
            "ExistingTransitGateway",
            "TransitGatewayRouteTableIdForAssociation",
            "TransitGatewayRTIdForDefaultRoute",
          ],
        },
        Object {
          "Label": Object {
            "default": "Firewall Logging Configuration",
          },
          "Parameters": Array [
            "logDestinationType",
            "logType",
            "LogRetentionPeriod",
          ],
        },
      ],
      "ParameterLabels": Object {
        "ExistingTransitGateway": Object {
          "default": "Provide the existing AWS Transit Gateway ID you wish to attach to the Inspection VPC",
        },
        "LogRetentionPeriod": Object {
          "default": "Select the log retention period for Network Firewall Logs.",
        },
        "TransitGatewayRTIdForDefaultRoute": Object {
          "default": "Provide the AWS Transit Gateway Route Table to receive 0.0.0.0/0 route to the Inspection VPC TGW Attachment.",
        },
        "TransitGatewayRouteTableIdForAssociation": Object {
          "default": "Provide AWS Transit Gateway Route Table to be associated with the Inspection VPC TGW Attachment.",
        },
        "cidrBlock": Object {
          "default": "Provide the CIDR block for the Inspection VPC",
        },
        "logDestinationType": Object {
          "default": "Select the type of log destination for the Network Firewall",
        },
        "logType": Object {
          "default": "Select the type of log to send to the defined log destination.",
        },
      },
    },
  },
  "Outputs": Object {
    "ArtifactBucketforCodePipeline": Object {
      "Description": "Artifact bucket name configured for the CodePipeline.",
      "Value": Object {
        "Ref": "NetworkFirewallCodePipelineArtifactsBucketF2569455",
      },
    },
    "CloudWatchLogGroupforFirewallLogs": Object {
      "Description": "CloudWatch Log Group used as the log destination for Firewall Logs.",
      "Value": Object {
        "Fn::If": Array [
          "LoggingInCloudWatch",
          Object {
            "Ref": "CloudWatchLogGroup",
          },
          "NotConfigured",
        ],
      },
    },
    "CodeBuildsourcecodebucket": Object {
      "Description": "Code Build source code bucket",
      "Value": Object {
        "Ref": "CodeBuildStagesSourceCodeBucketFA98E7C7",
      },
    },
    "FirewallSubnet1ID": Object {
      "Description": "Subnet 1 associated with Network Firewall.",
      "Value": Object {
        "Ref": "NetworkFirewallSubnet1",
      },
    },
    "FirewallSubnet2ID": Object {
      "Description": "Subnet 2 associated with Network Firewall.",
      "Value": Object {
        "Ref": "NetworkFirewallSubnet2",
      },
    },
    "InspectionVPCID": Object {
      "Description": "Inspection VPC ID to create Network Firewall.",
      "Value": Object {
        "Ref": "VPC",
      },
    },
    "NetworkFirewallAvailabilityZone1": Object {
      "Description": "Availability Zone configured for Network Firewall subnet 1",
      "Value": Object {
        "Fn::GetAtt": Array [
          "NetworkFirewallSubnet1",
          "AvailabilityZone",
        ],
      },
    },
    "NetworkFirewallAvailabilityZone2": Object {
      "Description": "Availability Zone configured for Network Firewall subnet 2",
      "Value": Object {
        "Fn::GetAtt": Array [
          "NetworkFirewallSubnet2",
          "AvailabilityZone",
        ],
      },
    },
    "S3BucketforFirewallLogs": Object {
      "Description": "S3 Bucket used as the log destination for Firewall Logs.",
      "Value": Object {
        "Fn::If": Array [
          "LoggingInS3",
          Object {
            "Ref": "Logs6819BB44",
          },
          "NotConfigured",
        ],
      },
    },
    "TransitGatewaySubnet1ID": Object {
      "Description": "Subnet 1 associated with Transit Gateway.",
      "Value": Object {
        "Ref": "VPCTGWSubnet1",
      },
    },
    "TransitGatewaySubnet2ID": Object {
      "Description": "Subnet 1 associated with Transit Gateway.",
      "Value": Object {
        "Ref": "VPCTGWSubnet2",
      },
    },
  },
  "Parameters": Object {
    "ExistingTransitGateway": Object {
      "Default": "",
      "Description": "Existing AWS Transit Gateway id.",
      "Type": "String",
    },
    "LogRetentionPeriod": Object {
      "AllowedValues": Array [
        "1",
        "3",
        "5",
        "7",
        "14",
        "30",
        "60",
        "90",
        "120",
        "150",
        "180",
        "365",
        "400",
        "545",
        "731",
        "1827",
        "3653",
      ],
      "Default": 90,
      "Description": "Log retention period in days.",
      "Type": "Number",
    },
    "TransitGatewayRTIdForDefaultRoute": Object {
      "Default": "",
      "Description": "Existing AWS Transit Gateway route table id. Example: Spoke VPC Route Table. Format: tgw-rtb-4e5f6g7h",
      "Type": "String",
    },
    "TransitGatewayRouteTableIdForAssociation": Object {
      "Default": "",
      "Description": "Existing AWS Transit Gateway route table id. Example: Firewall Route Table. Format: tgw-rtb-0a1b2c3d",
      "Type": "String",
    },
    "cidrBlock": Object {
      "AllowedPattern": "^(?:[0-9]{1,3}.){3}[0-9]{1,3}[/]([0-9]?[0-6]?|[1][7-9])$",
      "Default": "192.168.1.0/26",
      "Description": "CIDR Block for VPC. Must be /26 or larger CIDR block.",
      "Type": "String",
    },
    "logDestinationType": Object {
      "AllowedValues": Array [
        "S3",
        "CloudWatchLogs",
        "ConfigureManually",
      ],
      "Default": "CloudWatchLogs",
      "Description": "The type of storage destination to send these logs to. You can send logs to an Amazon S3 bucket or a CloudWatch log group.",
      "Type": "String",
    },
    "logType": Object {
      "AllowedValues": Array [
        "ALERT",
        "FLOW",
        "EnableBoth",
      ],
      "Default": "FLOW",
      "Description": "The type of log to send. Alert logs report traffic that matches a StatefulRule with an action setting that sends an alert log message. Flow logs are standard network traffic flow logs.",
      "Type": "String",
    },
  },
  "Resources": Object {
    "BuildProject097C5DB7": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "LOG_LEVEL",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "SolutionMapping",
                  "Log",
                  "Level",
                ],
              },
            },
            Object {
              "Name": "VPC_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "VPC",
              },
            },
            Object {
              "Name": "SUBNET_IDS",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "NetworkFirewallSubnet1",
                    },
                    ",",
                    Object {
                      "Ref": "NetworkFirewallSubnet2",
                    },
                  ],
                ],
              },
            },
            Object {
              "Name": "LOG_TYPE",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "logType",
              },
            },
            Object {
              "Name": "LOG_DESTINATION_TYPE",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "logDestinationType",
              },
            },
            Object {
              "Name": "S3_LOG_BUCKET_NAME",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::If": Array [
                  "LoggingInS3",
                  Object {
                    "Ref": "Logs6819BB44",
                  },
                  "NotConfigured",
                ],
              },
            },
            Object {
              "Name": "CLOUDWATCH_LOG_GROUP_NAME",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::If": Array [
                  "LoggingInCloudWatch",
                  Object {
                    "Ref": "CloudWatchLogGroup",
                  },
                  "NotConfigured",
                ],
              },
            },
            Object {
              "Name": "VPC_TGW_ATTACHMENT_AZ_1",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallSubnet1",
                  "AvailabilityZone",
                ],
              },
            },
            Object {
              "Name": "VPC_TGW_ATTACHMENT_AZ_2",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallSubnet2",
                  "AvailabilityZone",
                ],
              },
            },
            Object {
              "Name": "VPC_TGW_ATTACHMENT_ROUTE_TABLE_ID_1",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "VPCTGWRouteTable1",
              },
            },
            Object {
              "Name": "VPC_TGW_ATTACHMENT_ROUTE_TABLE_ID_2",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "VPCTGWRouteTable2",
              },
            },
            Object {
              "Name": "CODE_BUILD_SOURCE_CODE_S3_KEY",
              "Type": "PLAINTEXT",
              "Value": "network-firewall-automation/v1.0.0",
            },
            Object {
              "Name": "STACK_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "AWS::StackId",
              },
            },
            Object {
              "Name": "SSM_PARAM_FOR_UUID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "Send",
                  "ParameterKey",
                  "UniqueId",
                ],
              },
            },
            Object {
              "Name": "SEND_ANONYMOUS_METRICS",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "Send",
                  "AnonymousUsage",
                  "Data",
                ],
              },
            },
            Object {
              "Name": "SOLUTION_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "SolutionMapping",
                  "Solution",
                  "Identifier",
                ],
              },
            },
            Object {
              "Name": "METRICS_URL",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "SolutionMapping",
                  "Metrics",
                  "URL",
                ],
              },
            },
            Object {
              "Name": "TRANSIT_GATEWAY_ATTACHMENT_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::If": Array [
                  "CreateTransitGatewayAttachment",
                  Object {
                    "Ref": "VPCTGWATTACHMENT",
                  },
                  "",
                ],
              },
            },
            Object {
              "Name": "TRANSIT_GATEWAY_ATTACHMENT_APPLIANCE_MODE",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "SolutionMapping",
                  "TransitGatewayAttachment",
                  "ApplianceMode",
                ],
              },
            },
          ],
          "Image": "aws/codebuild/standard:4.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "BuildProjectRoleAA92C755",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": Object {
            "Fn::Join": Array [
              "",
              Array [
                "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"runtime-versions\\": {
        \\"nodejs\\": \\"12\\"
      },
      \\"commands\\": [
        \\"export current=$(pwd)\\",
        \\"export sourceCodeKey=$CODE_BUILD_SOURCE_CODE_S3_KEY\\"
      ]
    },
    \\"pre_build\\": {
      \\"commands\\": [
        \\"cd $current\\",
        \\"pwd; ls -ltr\\",
        \\"echo 'Download Network Firewall Solution Package'\\",
        \\"aws s3 cp s3://",
                Object {
                  "Ref": "CodeBuildStagesSourceCodeBucketFA98E7C7",
                },
                "/$sourceCodeKey/network-firewall-automation.zip $current || true\\",
        \\"if [ -f $current/network-firewall-automation.zip ];then exit 0;else echo \\\\\\"Copy file to s3 bucket\\\\\\"; aws s3 cp s3://solutions-",
                Object {
                  "Ref": "AWS::Region",
                },
                "/$sourceCodeKey/network-firewall-automation.zip s3://",
                Object {
                  "Ref": "CodeBuildStagesSourceCodeBucketFA98E7C7",
                },
                "/$sourceCodeKey/network-firewall-automation.zip; aws s3 cp s3://",
                Object {
                  "Ref": "CodeBuildStagesSourceCodeBucketFA98E7C7",
                },
                "/$sourceCodeKey/network-firewall-automation.zip $current; fi;\\",
        \\"unzip -o $current/network-firewall-automation.zip -d $current\\",
        \\"pwd; ls -ltr\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"echo \\\\\\"Validating the firewall config\\\\\\"\\",
        \\"node build.js\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"files\\": \\"**/*\\"
  }
}",
              ],
            ],
          },
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "BuildProjectRoleAA92C755": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "BuildProjectRoleDefaultPolicy3E9F248C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:1234:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "BuildProject097C5DB7",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:1234:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "BuildProject097C5DB7",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:1234:report-group/",
                    Object {
                      "Ref": "BuildProject097C5DB7",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BuildProjectRoleDefaultPolicy3E9F248C",
        "Roles": Array [
          Object {
            "Ref": "BuildProjectRoleAA92C755",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchLogGroup": Object {
      "Condition": "LoggingInCloudWatch",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "KMSKeyForNetworkFirewallLogDestinations70A79322",
            "Arn",
          ],
        },
        "RetentionInDays": Object {
          "Ref": "LogRetentionPeriod",
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "CloudWatchLogsForNetworkFirewallBucketPolicy611AC31C": Object {
      "Condition": "LoggingInS3",
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Bucket": Object {
          "Ref": "Logs6819BB44",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "Logs6819BB44",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "Logs6819BB44",
                    "Arn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeBuildStageSourceCodeBucketPolicyF19BA2A0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CodeBuildStagesSourceCodeBucketFA98E7C7",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CodeBuildStagesSourceCodeBucketFA98E7C7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CodeBuildStagesSourceCodeBucketFA98E7C7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeBuildStagesSourceCodeBucketFA98E7C7": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "Source Code bucket bucket does not require logging configuration",
            },
            Object {
              "id": "W51",
              "reason": "Source Code bucket is private and does not require a bucket policy",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CodePipelineArtifactS3BucketPolicy6FFF9EE9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Bucket": Object {
          "Ref": "NetworkFirewallCodePipelineArtifactsBucketF2569455",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:DeleteBucket",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudformation.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:GetObject",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                    "Arn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
      "UpdateReplacePolicy": "Retain",
    },
    "DefaultRouteSpokeVPCTGWRouteTable": Object {
      "Condition": "CreateDefaultRouteFirewallRT",
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DestinationCidrBlock": Object {
          "Fn::FindInMap": Array [
            "SolutionMapping",
            "Route",
            "QuadZero",
          ],
        },
        "TransitGatewayAttachmentId": Object {
          "Ref": "VPCTGWATTACHMENT",
        },
        "TransitGatewayRouteTableId": Object {
          "Ref": "TransitGatewayRTIdForDefaultRoute",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "DeployProject1CF7CB79": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "LOG_LEVEL",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "SolutionMapping",
                  "Log",
                  "Level",
                ],
              },
            },
            Object {
              "Name": "VPC_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "VPC",
              },
            },
            Object {
              "Name": "SUBNET_IDS",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "NetworkFirewallSubnet1",
                    },
                    ",",
                    Object {
                      "Ref": "NetworkFirewallSubnet2",
                    },
                  ],
                ],
              },
            },
            Object {
              "Name": "LOG_TYPE",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "logType",
              },
            },
            Object {
              "Name": "LOG_DESTINATION_TYPE",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "logDestinationType",
              },
            },
            Object {
              "Name": "S3_LOG_BUCKET_NAME",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::If": Array [
                  "LoggingInS3",
                  Object {
                    "Ref": "Logs6819BB44",
                  },
                  "NotConfigured",
                ],
              },
            },
            Object {
              "Name": "CLOUDWATCH_LOG_GROUP_NAME",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::If": Array [
                  "LoggingInCloudWatch",
                  Object {
                    "Ref": "CloudWatchLogGroup",
                  },
                  "NotConfigured",
                ],
              },
            },
            Object {
              "Name": "VPC_TGW_ATTACHMENT_AZ_1",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallSubnet1",
                  "AvailabilityZone",
                ],
              },
            },
            Object {
              "Name": "VPC_TGW_ATTACHMENT_AZ_2",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallSubnet2",
                  "AvailabilityZone",
                ],
              },
            },
            Object {
              "Name": "VPC_TGW_ATTACHMENT_ROUTE_TABLE_ID_1",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "VPCTGWRouteTable1",
              },
            },
            Object {
              "Name": "VPC_TGW_ATTACHMENT_ROUTE_TABLE_ID_2",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "VPCTGWRouteTable2",
              },
            },
            Object {
              "Name": "CODE_BUILD_SOURCE_CODE_S3_KEY",
              "Type": "PLAINTEXT",
              "Value": "network-firewall-automation/v1.0.0",
            },
            Object {
              "Name": "STACK_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "AWS::StackId",
              },
            },
            Object {
              "Name": "SSM_PARAM_FOR_UUID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "Send",
                  "ParameterKey",
                  "UniqueId",
                ],
              },
            },
            Object {
              "Name": "SEND_ANONYMOUS_METRICS",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "Send",
                  "AnonymousUsage",
                  "Data",
                ],
              },
            },
            Object {
              "Name": "SOLUTION_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "SolutionMapping",
                  "Solution",
                  "Identifier",
                ],
              },
            },
            Object {
              "Name": "METRICS_URL",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "SolutionMapping",
                  "Metrics",
                  "URL",
                ],
              },
            },
            Object {
              "Name": "TRANSIT_GATEWAY_ATTACHMENT_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::If": Array [
                  "CreateTransitGatewayAttachment",
                  Object {
                    "Ref": "VPCTGWATTACHMENT",
                  },
                  "",
                ],
              },
            },
            Object {
              "Name": "TRANSIT_GATEWAY_ATTACHMENT_APPLIANCE_MODE",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::FindInMap": Array [
                  "SolutionMapping",
                  "TransitGatewayAttachment",
                  "ApplianceMode",
                ],
              },
            },
          ],
          "Image": "aws/codebuild/standard:4.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DeployProjectRole588C8C1D",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": Object {
            "Fn::Join": Array [
              "",
              Array [
                "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"runtime-versions\\": {
        \\"nodejs\\": \\"12\\"
      },
      \\"commands\\": [
        \\"export current=$(pwd)\\",
        \\"export sourceCodeKey=$CODE_BUILD_SOURCE_CODE_S3_KEY\\"
      ]
    },
    \\"pre_build\\": {
      \\"commands\\": [
        \\"cd $current\\",
        \\"pwd; ls -ltr\\",
        \\"echo 'Download Network Firewall Solution Package'\\",
        \\"aws s3 cp s3://",
                Object {
                  "Ref": "CodeBuildStagesSourceCodeBucketFA98E7C7",
                },
                "/$sourceCodeKey/network-firewall-automation.zip $current\\",
        \\"unzip -o $current/network-firewall-automation.zip -d $current\\",
        \\"pwd; ls -ltr\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"echo \\\\\\"Initiating Network Firewall Automation\\\\\\"\\",
        \\"node index.js\\"
      ]
    },
    \\"post_build\\": {
      \\"commands\\": []
    }
  },
  \\"artifacts\\": {
    \\"files\\": \\"**/*\\"
  }
}",
              ],
            ],
          },
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DeployProjectRole588C8C1D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeployProjectRoleDefaultPolicy52AEA98B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:1234:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DeployProject1CF7CB79",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:1234:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DeployProject1CF7CB79",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:1234:report-group/",
                    Object {
                      "Ref": "DeployProject1CF7CB79",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeployProjectRoleDefaultPolicy52AEA98B",
        "Roles": Array [
          Object {
            "Ref": "DeployProjectRole588C8C1D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FirewallSubnetRouteTable": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-FirewallSubnetRouteTable",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VPC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
      "UpdateReplacePolicy": "Retain",
    },
    "FlowLog": Object {
      "Properties": Object {
        "DeliverLogsPermissionArn": Object {
          "Fn::GetAtt": Array [
            "RoleFlowLogsCA794118",
            "Arn",
          ],
        },
        "LogGroupName": Object {
          "Ref": "AWS::StackName",
        },
        "ResourceId": Object {
          "Ref": "VPC",
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "KMSKeyForNetworkFirewallLogDestinations70A79322": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "This key will be used for encrypting the vpc flow logs and firewall logs.",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1234:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": "kms:GenerateDataKey*",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "logs.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "LogGroupFlowLogs": Object {
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "KMSKeyForNetworkFirewallLogDestinations70A79322",
            "Arn",
          ],
        },
        "LogGroupName": Object {
          "Ref": "AWS::StackName",
        },
        "RetentionInDays": Object {
          "Ref": "LogRetentionPeriod",
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "Logs6819BB44": Object {
      "Condition": "LoggingInS3",
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "Logs bucket does not require logging configuration",
            },
            Object {
              "id": "W51",
              "reason": "Logs bucket is private and does not require a bucket policy",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "KMSKeyForNetworkFirewallLogDestinations70A79322",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": Object {
                "Ref": "LogRetentionPeriod",
              },
              "Status": "Enabled",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "NetworkFirewallCodePipelineA72E3ADD": Object {
      "DependsOn": Array [
        "NetworkFirewallCodePipelineRoleDefaultPolicyF0142ABD",
        "NetworkFirewallCodePipelineRoleDDD28B15",
      ],
      "Properties": Object {
        "ArtifactStore": Object {
          "EncryptionKey": Object {
            "Id": Object {
              "Fn::GetAtt": Array [
                "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
                "Arn",
              ],
            },
            "Type": "KMS",
          },
          "Location": Object {
            "Ref": "NetworkFirewallCodePipelineArtifactsBucketF2569455",
          },
          "Type": "S3",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "NetworkFirewallCodePipelineRoleDDD28B15",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "main",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "NetworkFirewallCodeRepositoryF7BA0495",
                      "Name",
                    ],
                  },
                },
                "Name": "Source",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "SourceArtifact",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineSourceCodePipelineActionRole67C89750",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "BuildProject097C5DB7",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "SourceArtifact",
                  },
                ],
                "Name": "CodeBuild",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "BuildArtifact",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineValidationCodeBuildCodePipelineActionRole2A3E8726",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Validation",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "DeployProject1CF7CB79",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "BuildArtifact",
                  },
                ],
                "Name": "CodeDeploy",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineDeploymentCodeDeployCodePipelineActionRole6EA7639D",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Deployment",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1234:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineRoleDDD28B15",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineSourceCodePipelineActionRole67C89750",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "BuildProjectRoleAA92C755",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "BuildProjectRoleAA92C755",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "DeployProjectRole588C8C1D",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "DeployProjectRole588C8C1D",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkFirewallCodePipelineArtifactsBucketEncryptionKeyAlias1704A536": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AliasName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "alias/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-artifactBucket-EncryptionKeyAlias",
            ],
          ],
        },
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkFirewallCodePipelineArtifactsBucketF2569455": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This S3 bucket is used as the destination for 'NetworkFirewallCodePipelineArtifactsBucket'",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "NetworkFirewallCodePipelineDeploymentCodeDeployCodePipelineActionRole6EA7639D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1234:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "NetworkFirewallCodePipelineDeploymentCodeDeployCodePipelineActionRoleDefaultPolicyAB6FC4F9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeployProject1CF7CB79",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NetworkFirewallCodePipelineDeploymentCodeDeployCodePipelineActionRoleDefaultPolicyAB6FC4F9",
        "Roles": Array [
          Object {
            "Ref": "NetworkFirewallCodePipelineDeploymentCodeDeployCodePipelineActionRole6EA7639D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NetworkFirewallCodePipelineEventsRole94323A48": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "NetworkFirewallCodePipelineEventsRoleDefaultPolicy5835E037": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:eu-west-1:1234:",
                    Object {
                      "Ref": "NetworkFirewallCodePipelineA72E3ADD",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NetworkFirewallCodePipelineEventsRoleDefaultPolicy5835E037",
        "Roles": Array [
          Object {
            "Ref": "NetworkFirewallCodePipelineEventsRole94323A48",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NetworkFirewallCodePipelineRoleDDD28B15": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "NetworkFirewallCodePipelineRoleDefaultPolicyF0142ABD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineSourceCodePipelineActionRole67C89750",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineValidationCodeBuildCodePipelineActionRole2A3E8726",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineDeploymentCodeDeployCodePipelineActionRole6EA7639D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NetworkFirewallCodePipelineRoleDefaultPolicyF0142ABD",
        "Roles": Array [
          Object {
            "Ref": "NetworkFirewallCodePipelineRoleDDD28B15",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NetworkFirewallCodePipelineSourceCodePipelineActionRole67C89750": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1234:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "NetworkFirewallCodePipelineSourceCodePipelineActionRoleDefaultPolicyB01603D9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "NetworkFirewallCodePipelineArtifactsBucketF2569455",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodePipelineArtifactsBucketEncryptionKey086ED060",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "NetworkFirewallCodeRepositoryF7BA0495",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NetworkFirewallCodePipelineSourceCodePipelineActionRoleDefaultPolicyB01603D9",
        "Roles": Array [
          Object {
            "Ref": "NetworkFirewallCodePipelineSourceCodePipelineActionRole67C89750",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NetworkFirewallCodePipelineValidationCodeBuildCodePipelineActionRole2A3E8726": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1234:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "NetworkFirewallCodePipelineValidationCodeBuildCodePipelineActionRoleDefaultPolicyA4A71A44": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "BuildProject097C5DB7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NetworkFirewallCodePipelineValidationCodeBuildCodePipelineActionRoleDefaultPolicyA4A71A44",
        "Roles": Array [
          Object {
            "Ref": "NetworkFirewallCodePipelineValidationCodeBuildCodePipelineActionRole2A3E8726",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NetworkFirewallCodeRepositoryF7BA0495": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Code": Object {
          "S3": Object {
            "Bucket": "solutions-eu-west-1",
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "network-firewall-automation/",
                  Object {
                    "Fn::FindInMap": Array [
                      "SolutionMapping",
                      "Version",
                      "Latest",
                    ],
                  },
                  "/network-firewall-configuration.zip",
                ],
              ],
            },
          },
        },
        "RepositoryDescription": "This repository is created by the AWS Network Firewall solution for AWS Transit Gateway, to store and trigger changes to the network firewall rules and configurations.",
        "RepositoryName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Fn::FindInMap": Array [
                  "SolutionMapping",
                  "CodeCommitRepo",
                  "Name",
                ],
              },
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "NetworkFirewallCodeRepositoryMyTestStackNetworkFirewallCodePipelineD8BFDC90mainEventRule334BD2D0": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "main",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "NetworkFirewallCodeRepositoryF7BA0495",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:eu-west-1:1234:",
                  Object {
                    "Ref": "NetworkFirewallCodePipelineA72E3ADD",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "NetworkFirewallCodePipelineEventsRole94323A48",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "NetworkFirewallSubnet1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            "0",
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::Cidr": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "VPC",
                    "CidrBlock",
                  ],
                },
                4,
                "4",
              ],
            },
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-FirewallSubnet1",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VPC",
        },
      },
      "Type": "AWS::EC2::Subnet",
      "UpdateReplacePolicy": "Retain",
    },
    "NetworkFirewallSubnet1RouteTableAssociation": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "FirewallSubnetRouteTable",
        },
        "SubnetId": Object {
          "Ref": "NetworkFirewallSubnet1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "UpdateReplacePolicy": "Retain",
    },
    "NetworkFirewallSubnet2": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            "1",
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::Cidr": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "VPC",
                    "CidrBlock",
                  ],
                },
                4,
                "4",
              ],
            },
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-FirewallSubnet2",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VPC",
        },
      },
      "Type": "AWS::EC2::Subnet",
      "UpdateReplacePolicy": "Retain",
    },
    "NetworkFirewallSubnet2RouteTableAssociation": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "FirewallSubnetRouteTable",
        },
        "SubnetId": Object {
          "Ref": "NetworkFirewallSubnet2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "UpdateReplacePolicy": "Retain",
    },
    "RoleFlowLogsCA794118": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RoleFlowLogsDefaultPolicyD1F03EF4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LogGroupFlowLogs",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RoleFlowLogsDefaultPolicyD1F03EF4",
        "Roles": Array [
          Object {
            "Ref": "RoleFlowLogsCA794118",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TGWRoute": Object {
      "Condition": "CreateTransitGatewayAttachment",
      "DependsOn": Array [
        "VPCTGWATTACHMENT",
      ],
      "Properties": Object {
        "DestinationCidrBlock": Object {
          "Fn::FindInMap": Array [
            "SolutionMapping",
            "Route",
            "QuadZero",
          ],
        },
        "RouteTableId": Object {
          "Ref": "FirewallSubnetRouteTable",
        },
        "TransitGatewayId": Object {
          "Ref": "ExistingTransitGateway",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPC": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "CidrBlock": Object {
          "Ref": "cidrBlock",
        },
        "Tags": Array [
          Object {
            "Key": "created-by",
            "Value": "network-firewall-automation",
          },
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-Inspection-VPC",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
      "UpdateReplacePolicy": "Retain",
    },
    "VPCTGWATTACHMENT": Object {
      "Condition": "CreateTransitGatewayAttachment",
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "SubnetIds": Array [
          Object {
            "Ref": "VPCTGWSubnet1",
          },
          Object {
            "Ref": "VPCTGWSubnet2",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-Inspection-VPC-Attachment",
                ],
              ],
            },
          },
        ],
        "TransitGatewayId": Object {
          "Ref": "ExistingTransitGateway",
        },
        "VpcId": Object {
          "Ref": "VPC",
        },
      },
      "Type": "AWS::EC2::TransitGatewayAttachment",
    },
    "VPCTGWRouteTable1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-TGWSubnetRouteTable1",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VPC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
      "UpdateReplacePolicy": "Retain",
    },
    "VPCTGWRouteTable2": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-TGWSubnetRouteTable2",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VPC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
      "UpdateReplacePolicy": "Retain",
    },
    "VPCTGWRouteTableAssociation": Object {
      "Condition": "CreateTransitGatewayRTAssociation",
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "TransitGatewayAttachmentId": Object {
          "Ref": "VPCTGWATTACHMENT",
        },
        "TransitGatewayRouteTableId": Object {
          "Ref": "TransitGatewayRouteTableIdForAssociation",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "VPCTGWSubnet1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            "0",
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": Object {
          "Fn::Select": Array [
            2,
            Object {
              "Fn::Cidr": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "VPC",
                    "CidrBlock",
                  ],
                },
                4,
                "4",
              ],
            },
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-VPCTGWSubnet1",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VPC",
        },
      },
      "Type": "AWS::EC2::Subnet",
      "UpdateReplacePolicy": "Retain",
    },
    "VPCTGWSubnet1RouteTableAssociation": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCTGWRouteTable1",
        },
        "SubnetId": Object {
          "Ref": "VPCTGWSubnet1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "UpdateReplacePolicy": "Retain",
    },
    "VPCTGWSubnet2": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            "1",
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": Object {
          "Fn::Select": Array [
            3,
            Object {
              "Fn::Cidr": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "VPC",
                    "CidrBlock",
                  ],
                },
                4,
                "4",
              ],
            },
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-VPCTGWSubnet2",
                ],
              ],
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VPC",
        },
      },
      "Type": "AWS::EC2::Subnet",
      "UpdateReplacePolicy": "Retain",
    },
    "VPCTGWSubnet2RouteTableAssociation": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCTGWRouteTable2",
        },
        "SubnetId": Object {
          "Ref": "VPCTGWSubnet2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "UpdateReplacePolicy": "Retain",
    },
    "buildStageIAMPolicyB31D4B98": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "network-firewall:CreateFirewallPolicy",
                "network-firewall:CreateRuleGroup",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Sub": "arn:\${AWS::Partition}:network-firewall:\${AWS::Region}:\${AWS::AccountId}:stateful-rulegroup/*",
                },
                Object {
                  "Fn::Sub": "arn:\${AWS::Partition}:network-firewall:\${AWS::Region}:\${AWS::AccountId}:firewall-policy/*",
                },
                Object {
                  "Fn::Sub": "arn:\${AWS::Partition}:network-firewall:\${AWS::Region}:\${AWS::AccountId}:stateless-rulegroup/*",
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Sub": Array [
                    "arn:\${AWS::Partition}:s3:::\${CodeBucketName}/\${KeyName}/*",
                    Object {
                      "CodeBucketName": "solutions-eu-west-1",
                      "KeyName": "network-firewall-automation",
                    },
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "CodeBuildStagesSourceCodeBucketFA98E7C7",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::",
                    Object {
                      "Ref": "CodeBuildStagesSourceCodeBucketFA98E7C7",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:PutParameter",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": Array [
                  "arn:\${AWS::Partition}:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/\${ParameterKey}",
                  Object {
                    "ParameterKey": Object {
                      "Fn::FindInMap": Array [
                        "Send",
                        "ParameterKey",
                        "UniqueId",
                      ],
                    },
                  },
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "buildStageIAMPolicyB31D4B98",
        "Roles": Array [
          Object {
            "Ref": "BuildProjectRoleAA92C755",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deployStageFirewallLoggingCWPolicyD4098456": Object {
      "Condition": "LoggingInCloudWatch",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Resource * is required for describe APIs",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "logs:DescribeLogGroups",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:logs:*:\${AWS::AccountId}:log-group:*",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deployStageFirewallLoggingCWPolicyD4098456",
        "Roles": Array [
          Object {
            "Ref": "DeployProjectRole588C8C1D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deployStageFirewallLoggingPolicy15AD5CD5": Object {
      "Condition": "NotLoggingConfigureManually",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Resource * is required for these actions.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deployStageFirewallLoggingPolicy15AD5CD5",
        "Roles": Array [
          Object {
            "Ref": "DeployProjectRole588C8C1D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deployStageFirewallLoggingS3Policy8F79BDD2": Object {
      "Condition": "LoggingInS3",
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:PutBucketPolicy",
                "s3:GetBucketPolicy",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "Logs6819BB44",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deployStageFirewallLoggingS3Policy8F79BDD2",
        "Roles": Array [
          Object {
            "Ref": "DeployProjectRole588C8C1D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deployStageFirewallPolicy72BE60BE": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Resource * is required for describe APIs",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "network-firewall:CreateFirewall",
                "network-firewall:UpdateFirewallDeleteProtection",
                "network-firewall:DeleteRuleGroup",
                "network-firewall:DescribeLoggingConfiguration",
                "network-firewall:UpdateFirewallDescription",
                "network-firewall:CreateRuleGroup",
                "network-firewall:DescribeFirewall",
                "network-firewall:DeleteFirewallPolicy",
                "network-firewall:UpdateRuleGroup",
                "network-firewall:DescribeRuleGroup",
                "network-firewall:ListRuleGroups",
                "network-firewall:UpdateSubnetChangeProtection",
                "network-firewall:UpdateFirewallPolicyChangeProtection",
                "network-firewall:AssociateFirewallPolicy",
                "network-firewall:DescribeFirewallPolicy",
                "network-firewall:UpdateFirewallPolicy",
                "network-firewall:DescribeResourcePolicy",
                "network-firewall:CreateFirewallPolicy",
                "network-firewall:UpdateLoggingConfiguration",
                "network-firewall:TagResource",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Sub": "arn:\${AWS::Partition}:network-firewall:\${AWS::Region}:\${AWS::AccountId}:stateful-rulegroup/*",
                },
                Object {
                  "Fn::Sub": "arn:\${AWS::Partition}:network-firewall:\${AWS::Region}:\${AWS::AccountId}:firewall-policy/*",
                },
                Object {
                  "Fn::Sub": "arn:\${AWS::Partition}:network-firewall:\${AWS::Region}:\${AWS::AccountId}:firewall/*",
                },
                Object {
                  "Fn::Sub": "arn:\${AWS::Partition}:network-firewall:\${AWS::Region}:\${AWS::AccountId}:stateless-rulegroup/*",
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Sub": Array [
                    "arn:\${AWS::Partition}:s3:::\${CodeBucketName}/\${KeyName}/*",
                    Object {
                      "CodeBucketName": "solutions-eu-west-1",
                      "KeyName": "network-firewall-automation",
                    },
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "CodeBuildStagesSourceCodeBucketFA98E7C7",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "ec2:DescribeVpcs",
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ec2:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":route-table/",
                      Object {
                        "Ref": "VPCTGWRouteTable1",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ec2:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":route-table/",
                      Object {
                        "Ref": "VPCTGWRouteTable2",
                      },
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:aws:iam::\${AWS::AccountId}:role/aws-service-role/network-firewall.amazonaws.com/AWSServiceRoleForNetworkFirewall",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deployStageFirewallPolicy72BE60BE",
        "Roles": Array [
          Object {
            "Ref": "DeployProjectRole588C8C1D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deployStageModifyTransitGatewayAttachmentPolicy993566C2": Object {
      "Condition": "CreateTransitGatewayAttachment",
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ec2:ModifyTransitGatewayVpcAttachment",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":transit-gateway-attachment/",
                    Object {
                      "Ref": "VPCTGWATTACHMENT",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deployStageModifyTransitGatewayAttachmentPolicy993566C2",
        "Roles": Array [
          Object {
            "Ref": "DeployProjectRole588C8C1D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
